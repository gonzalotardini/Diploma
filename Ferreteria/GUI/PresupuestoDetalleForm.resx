<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="FinalizarButton.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        SUVORK5CYII=
</value>
  </data>
</root>