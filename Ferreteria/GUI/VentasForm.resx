<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/4QA6RXhpZgAATU0AKgAAAAgAA1EQAAEAAAABAQAAAFERAAQAAAAB
        AAAAAFESAAQAAAABAAAAAAAAAAD/2wBDAAIBAQIBAQICAgICAgICAwUDAwMDAwYEBAMFBwYHBwcGBwcI
        CQsJCAgKCAcHCg0KCgsMDAwMBwkODw0MDgsMDAz/2wBDAQICAgMDAwYDAwYMCAcIDAwMDAwMDAwMDAwM
        DAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAz/wAARCABrAHIDASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD9/KKKKACiiigAorwD4/8A/BQjwp8IrqfS9Fj/AOEr1yElJEtp
        gtnbN3DzYILD+6gbBBDFTXyn8SP25viX8SZpA3iCTQrRvu22jA2gT/toCZv/AB/HsK/IuLPGzhvI6ksN
        zuvVjo407NJ9pSbUV2aTbT3R+mcOeE+e5tBV3FUab2c7pteUUnL0bST6M/Sp3WNCzMFVeSSeBUVvqNvd
        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
</value>
  </data>
</root>