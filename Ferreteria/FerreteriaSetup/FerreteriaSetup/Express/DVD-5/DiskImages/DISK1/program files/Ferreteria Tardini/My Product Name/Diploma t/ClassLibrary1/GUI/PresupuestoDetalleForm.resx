<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="FinalizarButton.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAIUAAAAfCAYAAADJJw4ZAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADr0AAA69AUf7kK0AAAAZdEVYdFNvZnR3YXJlAEFkb2JlIEltYWdlUmVhZHlxyWU8
        AAADIGlUWHRYTUw6Y29tLmFkb2JlLnhtcAAAAAAAPD94cGFja2V0IGJlZ2luPSLvu78iIGlkPSJXNU0w
        TXBDZWhpSHpyZVN6TlRjemtjOWQiPz4gPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIg
        eDp4bXB0az0iQWRvYmUgWE1QIENvcmUgNS4wLWMwNjAgNjEuMTM0Nzc3LCAyMDEwLzAyLzEyLTE3OjMy
        OjAwICAgICAgICAiPiA8cmRmOlJERiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIv
        MjItcmRmLXN5bnRheC1ucyMiPiA8cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIiB4bWxuczp4bXA9
        Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC8iIHhtbG5zOnhtcE1NPSJodHRwOi8vbnMuYWRvYmUu
        Y29tL3hhcC8xLjAvbW0vIiB4bWxuczpzdFJlZj0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL3NU
        eXBlL1Jlc291cmNlUmVmIyIgeG1wOkNyZWF0b3JUb29sPSJBZG9iZSBQaG90b3Nob3AgQ1M1IFdpbmRv
        d3MiIHhtcE1NOkluc3RhbmNlSUQ9InhtcC5paWQ6REYxRjBFQkU5MkE5MTFFMzk1RTZDNUY5QTMwNjQ3
        RTIiIHhtcE1NOkRvY3VtZW50SUQ9InhtcC5kaWQ6REYxRjBFQkY5MkE5MTFFMzk1RTZDNUY5QTMwNjQ3
        RTIiPiA8eG1wTU06RGVyaXZlZEZyb20gc3RSZWY6aW5zdGFuY2VJRD0ieG1wLmlpZDpERjFGMEVCQzky
        QTkxMUUzOTVFNkM1RjlBMzA2NDdFMiIgc3RSZWY6ZG9jdW1lbnRJRD0ieG1wLmRpZDpERjFGMEVCRDky
        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
</value>
  </data>
</root>